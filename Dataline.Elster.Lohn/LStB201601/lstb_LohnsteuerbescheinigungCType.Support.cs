//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// <copyright file="lstb_LohnsteuerbescheinigungCTypeExtension.cs" company="DATALINE GmbH &amp; Co. KG">
// Copyright (c) DATALINE GmbH &amp; Co. KG. All rights reserved.
// </copyright>

using System;
using System.Collections.Generic;
using System.Xml.Serialization;

using Dataline.Elster.Basis;

namespace Dataline.Elster.Lohn
{
    namespace LStB201601
    {
        public partial class lstb_LohnsteuerbescheinigungCType : ILohnsteuerBescheinigung
        {
            public string LStBVersion
            {
                get { return XmlSchemaUtilities.GetEnumXmlValue(this.version); }
            }

            private IEnumerable<lstb_BesteuerungsmerkmaleCTypeELStAM> FilterBesteuerungsmerkmale<T>(Func<lstb_BesteuerungsmerkmaleCTypeELStAM, T> getCompareItem, Action<lstb_BesteuerungsmerkmaleCTypeELStAM> setNewItem) where T : class
            {
                var result = new List<lstb_BesteuerungsmerkmaleCTypeELStAM>();
                T previous = null;
                if (Besteuerungsmerkmale != null)
                {
                    foreach (var entry in Besteuerungsmerkmale)
                    {
                        var compareItem = getCompareItem(entry);
                        if (compareItem != null)
                        {
                            if (previous == null || !previous.Equals(compareItem))
                            {
                                result.Add(entry);
                                previous = compareItem;
                            }
                        }
                    }
                }
                if (result.Count == 0)
                    result.Add(new lstb_BesteuerungsmerkmaleCTypeELStAM());
                if (getCompareItem(result[0]) == null)
                    setNewItem(result[0]);
                return result;
            }

            [XmlIgnore]
            public IEnumerable<lstb_BesteuerungsmerkmaleCTypeELStAM> BesteuerungsmerkmaleSteuerklasse
            {
                get
                {
                    return FilterBesteuerungsmerkmale(x => x.Steuerklasse, x => x.Steuerklasse = new lstb_BesteuerungsmerkmaleCTypeELStAMSteuerklasse());
                }
            }

            [XmlIgnore]
            public IEnumerable<lstb_BesteuerungsmerkmaleCTypeELStAM> BesteuerungsmerkmaleKinder
            {
                get
                {
                    return FilterBesteuerungsmerkmale(x => x.Kinder, x => x.Kinder = new lstb_BesteuerungsmerkmaleCTypeELStAMKinder());
                }
            }

            [XmlIgnore]
            public IEnumerable<lstb_BesteuerungsmerkmaleCTypeELStAM> BesteuerungsmerkmaleKirchensteuerabzug
            {
                get
                {
                    return FilterBesteuerungsmerkmale(x => x.Kirchensteuerabzug, x => x.Kirchensteuerabzug = new lstb_BesteuerungsmerkmaleCTypeELStAMKirchensteuerabzug());
                }
            }

            [XmlIgnore]
            public IEnumerable<lstb_BesteuerungsmerkmaleCTypeELStAM> BesteuerungsmerkmaleHinzurechnungsbetrag
            {
                get
                {
                    return FilterBesteuerungsmerkmale(x => x.Hinzurechnungsbetrag, x => x.Hinzurechnungsbetrag = new lstb_BesteuerungsmerkmaleCTypeELStAMHinzurechnungsbetrag
                    {
                        jahr = string.Empty,
                        monat = string.Empty,
                    });
                }
            }

            [XmlIgnore]
            public IEnumerable<lstb_BesteuerungsmerkmaleCTypeELStAM> BesteuerungsmerkmaleSteuerfreibetrag
            {
                get
                {
                    return FilterBesteuerungsmerkmale(x => x.Steuerfreibetrag, x => x.Steuerfreibetrag = new lstb_BesteuerungsmerkmaleCTypeELStAMSteuerfreibetrag
                    {
                        jahr = string.Empty,
                        monat = string.Empty,
                    });
                }
            }
        }
    }
}
