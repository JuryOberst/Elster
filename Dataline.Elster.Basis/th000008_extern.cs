//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

// 
// Dieser Quellcode wurde automatisch generiert von xsd, Version=4.6.81.0.
// 
namespace Dataline.Elster.Basis {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.elster.de/2002/XMLSchema")]
    [System.Xml.Serialization.XmlRootAttribute("TransferHeader", Namespace="http://www.elster.de/2002/XMLSchema", IsNullable=false)]
    public partial class TransferHeaderCType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private VerfahrenSType verfahrenField;
        
        private DatenArtSType datenArtField;
        
        private VorgangSType vorgangField;
        
        private string transferTicketField;
        
        private string eTIDField;
        
        private TestmerkerSType testmerkerField;
        
        private bool testmerkerFieldSpecified;
        
        private TransferHeaderCTypeSigUser sigUserField;
        
        private EmpfaengerCType empfaengerField;
        
        private string herstellerIDField;
        
        private string datenLieferantField;
        
        private string eingangsDatumField;
        
        private DateiCType dateiField;
        
        private RCCType rcField;
        
        private string versionClientField;
        
        private TransferHeaderCTypeZusatz zusatzField;
        
        private TransferHeaderCTypeVersion versionField;
        
        /// <remarks/>
        public VerfahrenSType Verfahren {
            get {
                return this.verfahrenField;
            }
            set {
                this.verfahrenField = value;
                this.RaisePropertyChanged("Verfahren");
            }
        }
        
        /// <remarks/>
        public DatenArtSType DatenArt {
            get {
                return this.datenArtField;
            }
            set {
                this.datenArtField = value;
                this.RaisePropertyChanged("DatenArt");
            }
        }
        
        /// <remarks/>
        public VorgangSType Vorgang {
            get {
                return this.vorgangField;
            }
            set {
                this.vorgangField = value;
                this.RaisePropertyChanged("Vorgang");
            }
        }
        
        /// <remarks/>
        public string TransferTicket {
            get {
                return this.transferTicketField;
            }
            set {
                this.transferTicketField = value;
                this.RaisePropertyChanged("TransferTicket");
            }
        }
        
        /// <remarks/>
        public string ETID {
            get {
                return this.eTIDField;
            }
            set {
                this.eTIDField = value;
                this.RaisePropertyChanged("ETID");
            }
        }
        
        /// <remarks/>
        public TestmerkerSType Testmerker {
            get {
                return this.testmerkerField;
            }
            set {
                this.testmerkerField = value;
                this.RaisePropertyChanged("Testmerker");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TestmerkerSpecified {
            get {
                return this.testmerkerFieldSpecified;
            }
            set {
                this.testmerkerFieldSpecified = value;
                this.RaisePropertyChanged("TestmerkerSpecified");
            }
        }
        
        /// <remarks/>
        public TransferHeaderCTypeSigUser SigUser {
            get {
                return this.sigUserField;
            }
            set {
                this.sigUserField = value;
                this.RaisePropertyChanged("SigUser");
            }
        }
        
        /// <remarks/>
        public EmpfaengerCType Empfaenger {
            get {
                return this.empfaengerField;
            }
            set {
                this.empfaengerField = value;
                this.RaisePropertyChanged("Empfaenger");
            }
        }
        
        /// <remarks/>
        public string HerstellerID {
            get {
                return this.herstellerIDField;
            }
            set {
                this.herstellerIDField = value;
                this.RaisePropertyChanged("HerstellerID");
            }
        }
        
        /// <remarks/>
        public string DatenLieferant {
            get {
                return this.datenLieferantField;
            }
            set {
                this.datenLieferantField = value;
                this.RaisePropertyChanged("DatenLieferant");
            }
        }
        
        /// <remarks/>
        public string EingangsDatum {
            get {
                return this.eingangsDatumField;
            }
            set {
                this.eingangsDatumField = value;
                this.RaisePropertyChanged("EingangsDatum");
            }
        }
        
        /// <remarks/>
        public DateiCType Datei {
            get {
                return this.dateiField;
            }
            set {
                this.dateiField = value;
                this.RaisePropertyChanged("Datei");
            }
        }
        
        /// <remarks/>
        public RCCType RC {
            get {
                return this.rcField;
            }
            set {
                this.rcField = value;
                this.RaisePropertyChanged("RC");
            }
        }
        
        /// <remarks/>
        public string VersionClient {
            get {
                return this.versionClientField;
            }
            set {
                this.versionClientField = value;
                this.RaisePropertyChanged("VersionClient");
            }
        }
        
        /// <remarks/>
        public TransferHeaderCTypeZusatz Zusatz {
            get {
                return this.zusatzField;
            }
            set {
                this.zusatzField = value;
                this.RaisePropertyChanged("Zusatz");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public TransferHeaderCTypeVersion version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.elster.de/headerbasis02/XMLSchema")]
    public enum VerfahrenSType {
        
        /// <remarks/>
        DummyWorker,
        
        /// <remarks/>
        ElsterAnmeldung,
        
        /// <remarks/>
        ElsterAuswertung,
        
        /// <remarks/>
        ElsterBackupSystem,
        
        /// <remarks/>
        ElsterBereitstellung,
        
        /// <remarks/>
        ElsterBilanz,
        
        /// <remarks/>
        ElsterBRM,
        
        /// <remarks/>
        ElsterBRMOrg,
        
        /// <remarks/>
        ElsterBrief,
        
        /// <remarks/>
        ElsterDVEtoLKS,
        
        /// <remarks/>
        ElsterDAME,
        
        /// <remarks/>
        ElsterDatenabholung,
        
        /// <remarks/>
        ElsterDatenbereitstellung,
        
        /// <remarks/>
        ElsterDatenversand,
        
        /// <remarks/>
        ElsterErklaerung,
        
        /// <remarks/>
        ElsterElfe,
        
        /// <remarks/>
        ElsterEARL,
        
        /// <remarks/>
        ElsterELStAM,
        
        /// <remarks/>
        ElsterEMail,
        
        /// <remarks/>
        ElsterExtern,
        
        /// <remarks/>
        ElsterFSE,
        
        /// <remarks/>
        ElsterFT,
        
        /// <remarks/>
        ElsterFTintern,
        
        /// <remarks/>
        ElsterGeCoSYN,
        
        /// <remarks/>
        ElsterIDRecherche,
        
        /// <remarks/>
        ElsterKapESt,
        
        /// <remarks/>
        ElsterKMV,
        
        /// <remarks/>
        ElsterKMVProtokoll,
        
        /// <remarks/>
        ElsterKMVIntern,
        
        /// <remarks/>
        ElsterKontoabfrage,
        
        /// <remarks/>
        ElsterKontoablage,
        
        /// <remarks/>
        ElsterKStoKS,
        
        /// <remarks/>
        ElsterLohn,
        
        /// <remarks/>
        ElsterLohn2,
        
        /// <remarks/>
        ElsterLohnIntern,
        
        /// <remarks/>
        ElsterLohnProtokoll,
        
        /// <remarks/>
        ElsterLKStoDVE,
        
        /// <remarks/>
        ElsterLKStoZF,
        
        /// <remarks/>
        ElsterLStZerlegung,
        
        /// <remarks/>
        ElsterLStZerlegungProtokoll,
        
        /// <remarks/>
        ElsterMAG,
        
        /// <remarks/>
        ElsterMOSS,
        
        /// <remarks/>
        ElsterNachricht,
        
        /// <remarks/>
        ElsterPdf,
        
        /// <remarks/>
        ElsterPortal,
        
        /// <remarks/>
        ElsterPortalAdapter,
        
        /// <remarks/>
        ElsterSignatur,
        
        /// <remarks/>
        ElsterSmart,
        
        /// <remarks/>
        ElsterSuch,
        
        /// <remarks/>
        ElsterSuchExtern,
        
        /// <remarks/>
        ElsterVaSt,
        
        /// <remarks/>
        ElsterVerarbeitungsMeldung,
        
        /// <remarks/>
        ElsterVollmachtDB,
        
        /// <remarks/>
        ElsterZANS,
        
        /// <remarks/>
        ElsterZFtoLKS,
        
        /// <remarks/>
        ElsterZfaZivit,
        
        /// <remarks/>
        ElsterZObEL,
        
        /// <remarks/>
        ElsterGINSTER,
        
        /// <remarks/>
        OpenZoll,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.elster.de/headerbasis02/XMLSchema")]
    public enum DatenArtSType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("34a")]
        Item34a,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("50a")]
        Item50a,
        
        /// <remarks/>
        AAZD,
        
        /// <remarks/>
        AbholungErinnerungEMail,
        
        /// <remarks/>
        Abholverlangen,
        
        /// <remarks/>
        AbrufcodeAntrag,
        
        /// <remarks/>
        AbrufcodeEMail,
        
        /// <remarks/>
        AbrufcodeStorno,
        
        /// <remarks/>
        AenderungslisteDUe,
        
        /// <remarks/>
        AenderungslisteElstam,
        
        /// <remarks/>
        AenderungslisteHinweis,
        
        /// <remarks/>
        AenderungslisteStatus,
        
        /// <remarks/>
        AIFA,
        
        /// <remarks/>
        AktenAbgabe,
        
        /// <remarks/>
        AktenAbgabeInfo,
        
        /// <remarks/>
        ALB,
        
        /// <remarks/>
        Allgemein,
        
        /// <remarks/>
        ANAuskunft,
        
        /// <remarks/>
        ANAuskunftElstam,
        
        /// <remarks/>
        ANAuskunftRequest,
        
        /// <remarks/>
        AnfrageMeldedaten,
        
        /// <remarks/>
        AnfrMeldedatenIdNr,
        
        /// <remarks/>
        AnfrMeldedatenPerson,
        
        /// <remarks/>
        AntraegeRechteLoeschen,
        
        /// <remarks/>
        AntraegeUndRechte,
        
        /// <remarks/>
        AntragsbriefFreischaltCode,
        
        /// <remarks/>
        AntwortMeldedaten,
        
        /// <remarks/>
        ASPZ,
        
        /// <remarks/>
        ASPZF,
        
        /// <remarks/>
        ASPZR,
        
        /// <remarks/>
        Auftrag,
        
        /// <remarks/>
        AuslaendischeLebensversicherung,
        
        /// <remarks/>
        AVFG,
        
        /// <remarks/>
        AVIATA,
        
        /// <remarks/>
        AVZF,
        
        /// <remarks/>
        AVZFR,
        
        /// <remarks/>
        AWST,
        
        /// <remarks/>
        AWSTR,
        
        /// <remarks/>
        BA,
        
        /// <remarks/>
        BBANK,
        
        /// <remarks/>
        BescheidBenachrichtigung,
        
        /// <remarks/>
        Bilanz,
        
        /// <remarks/>
        BLZ,
        
        /// <remarks/>
        Brief,
        
        /// <remarks/>
        BRMAntraegeUndRechte,
        
        /// <remarks/>
        BRMFreischaltung,
        
        /// <remarks/>
        BRMNachricht,
        
        /// <remarks/>
        BUCH,
        
        /// <remarks/>
        BUKON,
        
        /// <remarks/>
        BUKOR,
        
        /// <remarks/>
        BUKRD,
        
        /// <remarks/>
        BUKWZ,
        
        /// <remarks/>
        BZStDiverse,
        
        /// <remarks/>
        BZStDiverseRM,
        
        /// <remarks/>
        DAAL,
        
        /// <remarks/>
        DaBu216,
        
        /// <remarks/>
        DEICH,
        
        /// <remarks/>
        DFP1,
        
        /// <remarks/>
        Dialog,
        
        /// <remarks/>
        DSAP1,
        
        /// <remarks/>
        DUeAbmelden,
        
        /// <remarks/>
        DUeAnmelden,
        
        /// <remarks/>
        DUeUmmelden,
        
        /// <remarks/>
        EARLDatenExportDAME,
        
        /// <remarks/>
        EARLDatenExportRMS,
        
        /// <remarks/>
        EAWAuftrag,
        
        /// <remarks/>
        EAWErgebnis,
        
        /// <remarks/>
        EAWRB,
        
        /// <remarks/>
        EAWZAuftrag,
        
        /// <remarks/>
        EAWZErgebnis,
        
        /// <remarks/>
        EAWZwiAuftrag,
        
        /// <remarks/>
        EAWZwiErgebnis,
        
        /// <remarks/>
        Einspruch,
        
        /// <remarks/>
        EKoFreischaltung,
        
        /// <remarks/>
        ELStAMSuche,
        
        /// <remarks/>
        ElsterDivDaten,
        
        /// <remarks/>
        ElsterErklaerungDaten,
        
        /// <remarks/>
        ElsterFTDaten,
        
        /// <remarks/>
        ElsterKMVDaten,
        
        /// <remarks/>
        ElsterLohnDaten,
        
        /// <remarks/>
        ElsterLohn2ANDaten,
        
        /// <remarks/>
        ElsterLohn2Daten,
        
        /// <remarks/>
        ElsterLohnInternVersand,
        
        /// <remarks/>
        ElsterLohnInternAuftrag,
        
        /// <remarks/>
        ElsterVaStDaten,
        
        /// <remarks/>
        ElsterZansDaten,
        
        /// <remarks/>
        EMAIL,
        
        /// <remarks/>
        EMAK,
        
        /// <remarks/>
        EMAKF,
        
        /// <remarks/>
        EMCS,
        
        /// <remarks/>
        EMSL,
        
        /// <remarks/>
        ErbStBStat,
        
        /// <remarks/>
        ErbStBStatRM,
        
        /// <remarks/>
        ErgMeldedatenIdNr,
        
        /// <remarks/>
        ErgMeldedatenPerson,
        
        /// <remarks/>
        ESB,
        
        /// <remarks/>
        ESSGS,
        
        /// <remarks/>
        ESSRM,
        
        /// <remarks/>
        ESt,
        
        /// <remarks/>
        EStbeschraenkt,
        
        /// <remarks/>
        ESTBR,
        
        /// <remarks/>
        ESTBS,
        
        /// <remarks/>
        EStBStat,
        
        /// <remarks/>
        EStBStatRM,
        
        /// <remarks/>
        ESTGS,
        
        /// <remarks/>
        ESTGX,
        
        /// <remarks/>
        EStGStat,
        
        /// <remarks/>
        EStGStatRM,
        
        /// <remarks/>
        ESTRM,
        
        /// <remarks/>
        ESTRX,
        
        /// <remarks/>
        ESt4BMitteilung,
        
        /// <remarks/>
        EUER,
        
        /// <remarks/>
        EUn,
        
        /// <remarks/>
        EURS,
        
        /// <remarks/>
        EUZinsmitteilung,
        
        /// <remarks/>
        EUZIO,
        
        /// <remarks/>
        EUZIR,
        
        /// <remarks/>
        F15K,
        
        /// <remarks/>
        F15L,
        
        /// <remarks/>
        Fallliste,
        
        /// <remarks/>
        FATCA,
        
        /// <remarks/>
        FATCARM,
        
        /// <remarks/>
        FDSuche,
        
        /// <remarks/>
        FehlerMeldung,
        
        /// <remarks/>
        FEIGS,
        
        /// <remarks/>
        FEIN,
        
        /// <remarks/>
        FEINB,
        
        /// <remarks/>
        FEIRM,
        
        /// <remarks/>
        FISCH,
        
        /// <remarks/>
        FreischaltcodeEMail,
        
        /// <remarks/>
        FreistellungKapitalertraegeBV,
        
        /// <remarks/>
        FSADE,
        
        /// <remarks/>
        FSADV,
        
        /// <remarks/>
        FSAK,
        
        /// <remarks/>
        FSLOG,
        
        /// <remarks/>
        GDA,
        
        /// <remarks/>
        GELF,
        
        /// <remarks/>
        GEWAB,
        
        /// <remarks/>
        GEWAN,
        
        /// <remarks/>
        GEWBA,
        
        /// <remarks/>
        GEWBS,
        
        /// <remarks/>
        GEWBR,
        
        /// <remarks/>
        GEWGI,
        
        /// <remarks/>
        GEWGS,
        
        /// <remarks/>
        GEWHN,
        
        /// <remarks/>
        GEWMB,
        
        /// <remarks/>
        GEWRM,
        
        /// <remarks/>
        GewSt,
        
        /// <remarks/>
        GewStBStat,
        
        /// <remarks/>
        GewStBStatRM,
        
        /// <remarks/>
        GewStGStat,
        
        /// <remarks/>
        GewStGStatRM,
        
        /// <remarks/>
        GewStZ,
        
        /// <remarks/>
        GEWTP,
        
        /// <remarks/>
        GEWUM,
        
        /// <remarks/>
        GEWXX,
        
        /// <remarks/>
        GINSTERLieferung,
        
        /// <remarks/>
        GMB,
        
        /// <remarks/>
        GMBAE,
        
        /// <remarks/>
        GMBAS,
        
        /// <remarks/>
        GMBV,
        
        /// <remarks/>
        GRINF,
        
        /// <remarks/>
        GRIPR,
        
        /// <remarks/>
        GRIRM,
        
        /// <remarks/>
        GRSTE,
        
        /// <remarks/>
        GSB,
        
        /// <remarks/>
        GWPH1,
        
        /// <remarks/>
        HHRE,
        
        /// <remarks/>
        HWKD,
        
        /// <remarks/>
        HWKR,
        
        /// <remarks/>
        IAA,
        
        /// <remarks/>
        IDAKT,
        
        /// <remarks/>
        IDARM,
        
        /// <remarks/>
        IdentabgleichArt1,
        
        /// <remarks/>
        IdentabgleichArt2,
        
        /// <remarks/>
        IdentabgleichArt3,
        
        /// <remarks/>
        IdentabgleichArt1RM,
        
        /// <remarks/>
        IdentabgleichArt2RM,
        
        /// <remarks/>
        IdentabgleichArt3RM,
        
        /// <remarks/>
        IDNrInfo,
        
        /// <remarks/>
        IDNrSuche,
        
        /// <remarks/>
        IDSERV,
        
        /// <remarks/>
        IDSERVRM,
        
        /// <remarks/>
        InformationsMeldung,
        
        /// <remarks/>
        KanzleiAnlage,
        
        /// <remarks/>
        KanzleiUpdate,
        
        /// <remarks/>
        KanzleiLoeschen,
        
        /// <remarks/>
        KapEStA,
        
        /// <remarks/>
        KapEStDivAuswertung,
        
        /// <remarks/>
        KapEStDivAufkommen,
        
        /// <remarks/>
        KapEStDivBuchungen,
        
        /// <remarks/>
        KapEStDivNachweis,
        
        /// <remarks/>
        KapEStDivZahlungsaustausch,
        
        /// <remarks/>
        KapEStInvStG,
        
        /// <remarks/>
        KapG,
        
        /// <remarks/>
        KAPID,
        
        /// <remarks/>
        KAPIF,
        
        /// <remarks/>
        KAPIP,
        
        /// <remarks/>
        KARCO,
        
        /// <remarks/>
        KATEW,
        
        /// <remarks/>
        KBL,
        
        /// <remarks/>
        KERH,
        
        /// <remarks/>
        KEVIZZAX,
        
        /// <remarks/>
        KEVIZZBG,
        
        /// <remarks/>
        KEVIZZF0,
        
        /// <remarks/>
        KEVIZZF1,
        
        /// <remarks/>
        KEVIZZGX,
        
        /// <remarks/>
        KEVIZZJX,
        
        /// <remarks/>
        KEVIZZK0,
        
        /// <remarks/>
        KEVIZZKX,
        
        /// <remarks/>
        KEVIZZMX,
        
        /// <remarks/>
        KEVIZZN1,
        
        /// <remarks/>
        KEVIZZN2,
        
        /// <remarks/>
        KEVIZZNX,
        
        /// <remarks/>
        KEVIZZRM,
        
        /// <remarks/>
        KEVIZZRX,
        
        /// <remarks/>
        KEVIZZSX,
        
        /// <remarks/>
        KEVIZZUX,
        
        /// <remarks/>
        KEVIZZWX,
        
        /// <remarks/>
        KEVIZZZX,
        
        /// <remarks/>
        KFEST,
        
        /// <remarks/>
        KFZB,
        
        /// <remarks/>
        KFZD,
        
        /// <remarks/>
        KFZDB,
        
        /// <remarks/>
        KFZE,
        
        /// <remarks/>
        KFZL,
        
        /// <remarks/>
        KFZR,
        
        /// <remarks/>
        KIGE,
        
        /// <remarks/>
        KISTA,
        
        /// <remarks/>
        KISTARM,
        
        /// <remarks/>
        KISTM,
        
        /// <remarks/>
        KIWI,
        
        /// <remarks/>
        KIWIT,
        
        /// <remarks/>
        KKIS,
        
        /// <remarks/>
        KMAuftrag,
        
        /// <remarks/>
        KMErgebnis,
        
        /// <remarks/>
        KMFreistellungsauftrag,
        
        /// <remarks/>
        KMVProtokoll,
        
        /// <remarks/>
        KMVInternVersand,
        
        /// <remarks/>
        KOF,
        
        /// <remarks/>
        KOFZ,
        
        /// <remarks/>
        KOFL,
        
        /// <remarks/>
        Kontoabfrage,
        
        /// <remarks/>
        Kontoinformation,
        
        /// <remarks/>
        Kontrollmitteilung,
        
        /// <remarks/>
        KPAD,
        
        /// <remarks/>
        KPAF,
        
        /// <remarks/>
        KPAP,
        
        /// <remarks/>
        KPBU,
        
        /// <remarks/>
        KPDAK,
        
        /// <remarks/>
        KPDAW,
        
        /// <remarks/>
        KPDNV,
        
        /// <remarks/>
        KPKAU,
        
        /// <remarks/>
        KPKAW,
        
        /// <remarks/>
        KPKAZ,
        
        /// <remarks/>
        KPKRM,
        
        /// <remarks/>
        KPZA,
        
        /// <remarks/>
        KPZAD,
        
        /// <remarks/>
        KPZE,
        
        /// <remarks/>
        KPZL,
        
        /// <remarks/>
        KrankenPflegeVersicherung,
        
        /// <remarks/>
        KSt,
        
        /// <remarks/>
        KSTBS,
        
        /// <remarks/>
        KSTBR,
        
        /// <remarks/>
        KStBStat,
        
        /// <remarks/>
        KStBStatRM,
        
        /// <remarks/>
        KSTGS,
        
        /// <remarks/>
        KStGStat,
        
        /// <remarks/>
        KStGStatRM,
        
        /// <remarks/>
        KSTRM,
        
        /// <remarks/>
        KStGem,
        
        /// <remarks/>
        KStBer1,
        
        /// <remarks/>
        KStBer1a,
        
        /// <remarks/>
        KStKassen1,
        
        /// <remarks/>
        KStPart1,
        
        /// <remarks/>
        KStWiFoe1,
        
        /// <remarks/>
        KStKSt1F278,
        
        /// <remarks/>
        KStZ,
        
        /// <remarks/>
        KV,
        
        /// <remarks/>
        KVABG,
        
        /// <remarks/>
        KVOS,
        
        /// <remarks/>
        LLIST,
        
        /// <remarks/>
        Lohnersatzleistung,
        
        /// <remarks/>
        Loeschliste,
        
        /// <remarks/>
        LStA,
        
        /// <remarks/>
        LStB,
        
        /// <remarks/>
        M1SS,
        
        /// <remarks/>
        M1SSRM,
        
        /// <remarks/>
        MAG,
        
        /// <remarks/>
        MAGA,
        
        /// <remarks/>
        MAGD,
        
        /// <remarks/>
        MAGZ,
        
        /// <remarks/>
        MATIM,
        
        /// <remarks/>
        MATMI,
        
        /// <remarks/>
        MAVIdent,
        
        /// <remarks/>
        MAVIdentRM,
        
        /// <remarks/>
        MAVIM,
        
        /// <remarks/>
        MAVMI,
        
        /// <remarks/>
        MELK,
        
        /// <remarks/>
        MfaStMLF,
        
        /// <remarks/>
        MFSB,
        
        /// <remarks/>
        MitteilungAbrufCode,
        
        /// <remarks/>
        MitteilungKdbZero,
        
        /// <remarks/>
        Negativliste,
        
        /// <remarks/>
        NLIST,
        
        /// <remarks/>
        NVB,
        
        /// <remarks/>
        PersG,
        
        /// <remarks/>
        PersGBStat,
        
        /// <remarks/>
        PersGBStatRM,
        
        /// <remarks/>
        PdfBrief,
        
        /// <remarks/>
        POSLJ,
        
        /// <remarks/>
        POSLM,
        
        /// <remarks/>
        ProtAuslaendischeLebensversicherung,
        
        /// <remarks/>
        ProtErgMeldedatenIdNr,
        
        /// <remarks/>
        ProtErgMeldedatenPerson,
        
        /// <remarks/>
        ProtESt4BMitteilung,
        
        /// <remarks/>
        ProtEUZinsmitteilung,
        
        /// <remarks/>
        ProtKrankenPflegeVersicherung,
        
        /// <remarks/>
        ProtokollAnforderung,
        
        /// <remarks/>
        ProtKMFreistellungsauftrag,
        
        /// <remarks/>
        ProtRBM,
        
        /// <remarks/>
        ProtRiesterVersicherung,
        
        /// <remarks/>
        ProtRuerupVersicherung,
        
        /// <remarks/>
        PUBKY,
        
        /// <remarks/>
        RBM,
        
        /// <remarks/>
        RBMAuftrag,
        
        /// <remarks/>
        RBMErgebnis,
        
        /// <remarks/>
        RDAL,
        
        /// <remarks/>
        Registrierung,
        
        /// <remarks/>
        RegistrierungReVerSt,
        
        /// <remarks/>
        RegistrierungReVerStEMail,
        
        /// <remarks/>
        RegInfo,
        
        /// <remarks/>
        RegInfoAusschluss,
        
        /// <remarks/>
        RetInfo,
        
        /// <remarks/>
        RegRequestedInfo,
        
        /// <remarks/>
        RetRequestedInfo,
        
        /// <remarks/>
        RegAkzeptanz,
        
        /// <remarks/>
        RegAkzEinwendung,
        
        /// <remarks/>
        RegAblehnung,
        
        /// <remarks/>
        RegAnfrage,
        
        /// <remarks/>
        RFSB,
        
        /// <remarks/>
        RiesterVersicherung,
        
        /// <remarks/>
        RIAIM,
        
        /// <remarks/>
        RIAMI,
        
        /// <remarks/>
        RITIM,
        
        /// <remarks/>
        RITMI,
        
        /// <remarks/>
        RME,
        
        /// <remarks/>
        RuerupVersicherung,
        
        /// <remarks/>
        SADV,
        
        /// <remarks/>
        SADVF,
        
        /// <remarks/>
        SEPA,
        
        /// <remarks/>
        SondEStStat,
        
        /// <remarks/>
        SondEStStatRM,
        
        /// <remarks/>
        SpezRechtAntrag,
        
        /// <remarks/>
        SpezRechtFreischaltung,
        
        /// <remarks/>
        SpezRechtGenehmigung,
        
        /// <remarks/>
        SpezRechtListe,
        
        /// <remarks/>
        SpezRechtStorno,
        
        /// <remarks/>
        SpezRechtTeilnahme,
        
        /// <remarks/>
        SpezRechtVollmachtAnlage,
        
        /// <remarks/>
        SpezRechtVollmachtStorno,
        
        /// <remarks/>
        STBKE,
        
        /// <remarks/>
        StBKontingentierung,
        
        /// <remarks/>
        StBQuote,
        
        /// <remarks/>
        StAb50a,
        
        /// <remarks/>
        STE,
        
        /// <remarks/>
        STK,
        
        /// <remarks/>
        SteuernummernInfo,
        
        /// <remarks/>
        Steuernummernpruefung,
        
        /// <remarks/>
        SteuernummernSuche,
        
        /// <remarks/>
        SV,
        
        /// <remarks/>
        TEST,
        
        /// <remarks/>
        TEST7,
        
        /// <remarks/>
        TOT,
        
        /// <remarks/>
        UnentgeltlicheDepotuebertragung,
        
        /// <remarks/>
        UpdateDatei,
        
        /// <remarks/>
        USB,
        
        /// <remarks/>
        USt,
        
        /// <remarks/>
        UStBStat,
        
        /// <remarks/>
        UStBStatRM,
        
        /// <remarks/>
        USTGS,
        
        /// <remarks/>
        USTRM,
        
        /// <remarks/>
        UStVA,
        
        /// <remarks/>
        UStVABStat,
        
        /// <remarks/>
        UStVABStatRM,
        
        /// <remarks/>
        UStVEU,
        
        /// <remarks/>
        UStVEUF,
        
        /// <remarks/>
        UStVEURM,
        
        /// <remarks/>
        UVVGS,
        
        /// <remarks/>
        UVVRM,
        
        /// <remarks/>
        VCSYN,
        
        /// <remarks/>
        VaStBeleg,
        
        /// <remarks/>
        VaStGinsterListe,
        
        /// <remarks/>
        VaStInfo,
        
        /// <remarks/>
        VaStNachforderung,
        
        /// <remarks/>
        VaStTeilnehmer,
        
        /// <remarks/>
        VaStQuittung,
        
        /// <remarks/>
        VerfuegungsmitteilungASPZ,
        
        /// <remarks/>
        VerfuegungsmitteilungWOP,
        
        /// <remarks/>
        VERS,
        
        /// <remarks/>
        VFSPR,
        
        /// <remarks/>
        VOBU,
        
        /// <remarks/>
        VOEA,
        
        /// <remarks/>
        VOERS,
        
        /// <remarks/>
        VollmachtAnlage,
        
        /// <remarks/>
        VollmachtLoeschen,
        
        /// <remarks/>
        VorRegBZSt,
        
        /// <remarks/>
        VV,
        
        /// <remarks/>
        VVAEB,
        
        /// <remarks/>
        VVAEF,
        
        /// <remarks/>
        VVAEO,
        
        /// <remarks/>
        VVAM,
        
        /// <remarks/>
        VWDVG,
        
        /// <remarks/>
        WarnMeldung,
        
        /// <remarks/>
        WIDA,
        
        /// <remarks/>
        WIDR,
        
        /// <remarks/>
        WeDaReAuftrag,
        
        /// <remarks/>
        WeDaReErgebnis,
        
        /// <remarks/>
        Wiederanforderung,
        
        /// <remarks/>
        WiderrufAbfrageRecht,
        
        /// <remarks/>
        WPMB,
        
        /// <remarks/>
        WPMBR,
        
        /// <remarks/>
        WPML,
        
        /// <remarks/>
        WPMLR,
        
        /// <remarks/>
        ZD,
        
        /// <remarks/>
        ZMAlt,
        
        /// <remarks/>
        ZMDO,
        
        /// <remarks/>
        ZMEWJ,
        
        /// <remarks/>
        Suchanfrage,
        
        /// <remarks/>
        ZerlAenderungsDaten,
        
        /// <remarks/>
        ZObELBestaetigung,
        
        /// <remarks/>
        Zuwendungsbestaetigung,
        
        /// <remarks/>
        ZV21a3,
        
        /// <remarks/>
        USEGA,
        
        /// <remarks/>
        VIFAA,
        
        /// <remarks/>
        IDNRA,
        
        /// <remarks/>
        ZOBELA,
        
        /// <remarks/>
        USEGR,
        
        /// <remarks/>
        VIFAR,
        
        /// <remarks/>
        IDNRR,
        
        /// <remarks/>
        ZOBELR,
        
        /// <remarks/>
        WKM,
        
        /// <remarks/>
        PayInfo,
        
        /// <remarks/>
        PayReminder,
        
        /// <remarks/>
        Erstattung,
        
        /// <remarks/>
        ErklaerungAnfrage,
        
        /// <remarks/>
        Mahnung,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.elster.de/headerbasis02/XMLSchema")]
    public enum VorgangSType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("get-Sig")]
        getSig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("get-NoSig")]
        getNoSig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("send-Auth")]
        sendAuth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("send-Sig")]
        sendSig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("send-NoSig")]
        sendNoSig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("vis-NoSig")]
        visNoSig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("send-Auth-Offline")]
        sendAuthOffline,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("send-Auth-Part")]
        sendAuthPart,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("send-Auth-Continue")]
        sendAuthContinue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("send-NoSig-Offline")]
        sendNoSigOffline,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("send-Sig-Offline")]
        sendSigOffline,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("send-Auth-Offline-Part")]
        sendAuthOfflinePart,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("send-NoSig-Offline-Part")]
        sendNoSigOfflinePart,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.elster.de/headerbasis02/XMLSchema")]
    public enum TestmerkerSType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("000000000")]
        Item000000000,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("010000001")]
        Item010000001,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("080000001")]
        Item080000001,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("120000001")]
        Item120000001,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("120000002")]
        Item120000002,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("120000003")]
        Item120000003,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("160000001")]
        Item160000001,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("160000002")]
        Item160000002,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("220000000")]
        Item220000000,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("220002000")]
        Item220002000,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("230000001")]
        Item230000001,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("230000002")]
        Item230000002,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("240000000")]
        Item240000000,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("300000001")]
        Item300000001,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("370000001")]
        Item370000001,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("380000001")]
        Item380000001,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("400000010")]
        Item400000010,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("400000020")]
        Item400000020,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("400000030")]
        Item400000030,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("400000040")]
        Item400000040,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("400000050")]
        Item400000050,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("400000060")]
        Item400000060,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("480000001")]
        Item480000001,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("500000003")]
        Item500000003,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("500000004")]
        Item500000004,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("500000005")]
        Item500000005,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("500000006")]
        Item500000006,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("500000007")]
        Item500000007,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("500000013")]
        Item500000013,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("500000014")]
        Item500000014,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("500000015")]
        Item500000015,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("510000001")]
        Item510000001,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("700000001")]
        Item700000001,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("700000002")]
        Item700000002,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("700000004")]
        Item700000004,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.elster.de/2002/XMLSchema")]
    public partial class TransferHeaderCTypeSigUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.elster.de/2002/XMLSchema")]
    public partial class RCCType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string sigInternField;
        
        private string verarbeitungsVersionField;
        
        private RCCTypeRueckgabe rueckgabeField;
        
        private RCCTypeStack stackField;
        
        /// <remarks/>
        public string SigIntern {
            get {
                return this.sigInternField;
            }
            set {
                this.sigInternField = value;
                this.RaisePropertyChanged("SigIntern");
            }
        }
        
        /// <remarks/>
        public string VerarbeitungsVersion {
            get {
                return this.verarbeitungsVersionField;
            }
            set {
                this.verarbeitungsVersionField = value;
                this.RaisePropertyChanged("VerarbeitungsVersion");
            }
        }
        
        /// <remarks/>
        public RCCTypeRueckgabe Rueckgabe {
            get {
                return this.rueckgabeField;
            }
            set {
                this.rueckgabeField = value;
                this.RaisePropertyChanged("Rueckgabe");
            }
        }
        
        /// <remarks/>
        public RCCTypeStack Stack {
            get {
                return this.stackField;
            }
            set {
                this.stackField = value;
                this.RaisePropertyChanged("Stack");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.elster.de/2002/XMLSchema")]
    public partial class RCCTypeRueckgabe : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private string textField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.elster.de/2002/XMLSchema")]
    public partial class RCCTypeStack : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private string textField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.elster.de/2002/XMLSchema")]
    public partial class EmpfaengerCType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private BundeslandSType zielField;
        
        private EmpfaengerCTypeID idField;
        
        public EmpfaengerCType() {
            this.idField = EmpfaengerCTypeID.L;
        }
        
        /// <remarks/>
        public BundeslandSType Ziel {
            get {
                return this.zielField;
            }
            set {
                this.zielField = value;
                this.RaisePropertyChanged("Ziel");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public EmpfaengerCTypeID id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.elster.de/headerbasis02/XMLSchema")]
    public enum BundeslandSType {
        
        /// <remarks/>
        BW,
        
        /// <remarks/>
        BY,
        
        /// <remarks/>
        BE,
        
        /// <remarks/>
        BB,
        
        /// <remarks/>
        HB,
        
        /// <remarks/>
        HH,
        
        /// <remarks/>
        HE,
        
        /// <remarks/>
        MV,
        
        /// <remarks/>
        ND,
        
        /// <remarks/>
        NW,
        
        /// <remarks/>
        RP,
        
        /// <remarks/>
        SL,
        
        /// <remarks/>
        SN,
        
        /// <remarks/>
        ST,
        
        /// <remarks/>
        SH,
        
        /// <remarks/>
        TH,
        
        /// <remarks/>
        EC,
        
        /// <remarks/>
        BF,
        
        /// <remarks/>
        BFF,
        
        /// <remarks/>
        CS,
        
        /// <remarks/>
        CD,
        
        /// <remarks/>
        CM,
        
        /// <remarks/>
        DS,
        
        /// <remarks/>
        OP,
        
        /// <remarks/>
        TK,
        
        /// <remarks/>
        ZF,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.elster.de/2002/XMLSchema")]
    public enum EmpfaengerCTypeID {
        
        /// <remarks/>
        L,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.elster.de/2002/XMLSchema")]
    public partial class EricType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.elster.de/2002/XMLSchema")]
    public partial class ErstellungType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private EricType ericField;
        
        /// <remarks/>
        public EricType Eric {
            get {
                return this.ericField;
            }
            set {
                this.ericField = value;
                this.RaisePropertyChanged("Eric");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.elster.de/2002/XMLSchema")]
    public partial class DateiCType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private VerschluesselungSType verschluesselungField;
        
        private KompressionSType kompressionField;
        
        private string datenGroesseField;
        
        private string transportSchluesselField;
        
        private ErstellungType erstellungField;
        
        /// <remarks/>
        public VerschluesselungSType Verschluesselung {
            get {
                return this.verschluesselungField;
            }
            set {
                this.verschluesselungField = value;
                this.RaisePropertyChanged("Verschluesselung");
            }
        }
        
        /// <remarks/>
        public KompressionSType Kompression {
            get {
                return this.kompressionField;
            }
            set {
                this.kompressionField = value;
                this.RaisePropertyChanged("Kompression");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
        public string DatenGroesse {
            get {
                return this.datenGroesseField;
            }
            set {
                this.datenGroesseField = value;
                this.RaisePropertyChanged("DatenGroesse");
            }
        }
        
        /// <remarks/>
        public string TransportSchluessel {
            get {
                return this.transportSchluesselField;
            }
            set {
                this.transportSchluesselField = value;
                this.RaisePropertyChanged("TransportSchluessel");
            }
        }
        
        /// <remarks/>
        public ErstellungType Erstellung {
            get {
                return this.erstellungField;
            }
            set {
                this.erstellungField = value;
                this.RaisePropertyChanged("Erstellung");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.elster.de/headerbasis02/XMLSchema")]
    public enum VerschluesselungSType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PKCS#7v1.5")]
        PKCS7v15,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PKCS#7v1.5enveloped")]
        PKCS7v15enveloped,
        
        /// <remarks/>
        NO_BASE64,
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        CMSEncryptedData,
        
        /// <remarks/>
        CMSEnvelopedData,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.elster.de/headerbasis02/XMLSchema")]
    public enum KompressionSType {
        
        /// <remarks/>
        GZIP,
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        NO_BASE64,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.elster.de/2002/XMLSchema")]
    public partial class TransferHeaderCTypeZusatz : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] infoField;
        
        private string[] elsterInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Info")]
        public string[] Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
                this.RaisePropertyChanged("Info");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ElsterInfo")]
        public string[] ElsterInfo {
            get {
                return this.elsterInfoField;
            }
            set {
                this.elsterInfoField = value;
                this.RaisePropertyChanged("ElsterInfo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.81.0")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.elster.de/2002/XMLSchema")]
    public enum TransferHeaderCTypeVersion {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("000008")]
        Item000008,
    }
}
